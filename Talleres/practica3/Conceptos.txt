a) Se entiende por convencion de llamada al contrato (condiciones) que se debe respetar la funcion que sera llamada (???

En 64 bits la convencion C define lo siguiente:
• Los registros RBX, R12, R13, R14 y R15 son no volatiles.
• El valor de retorno sera almacenado en RAX para valores
enteros y punteros y en XMM0 para flotantes.
• Al salir de la funci´on llamada la pila debe encontrarse en el
mismo estado en el que estaba al ingresar (todo PUSH debe
tener su POP).
• Antes de realizar una llamada a una funcion, la pila debe
quedar alineada a 16 bytes si es una funcion que hace uso de
libc, sino debe estar alineada a 8 bytes.

En 32 bits la convencion C define lo siguiente:
• Los registros EBX, ESI y EDI son no vol´atiles.
• El valor de retorno ser´a almacenado en EAX.
• Al salir de la funcion llamada la pila debe encontrarse en el
mismo estado en el que estaba al ingresar (todo PUSH debe
tener su POP).
• Los parametros se pasaran de derecha a izquierda a traves
de la pila haciendo PUSH.
• Antes de realizar una llamada a una funci´on la pila debe
quedar alineada a 4 bytes.

b)

c) El stack frame es la region de la pila comprendida entre los parametros recibidos y el tope de la pila actual.
- Prologo: es donde se reserva espacio en la pila para datos temporales, se agrega padding para mantenerla alineada a 16 bytes y se preserva lo valores de los registros no volatiles
- Epilogo: es donde restauramos los valores de los registros no valatiles y devolvemos la pila a su estado inicial

d) Los datos temporales se ubicaran en la pila y acceder a los datos temporales y a los registros pasados por pila va a ser en direccion relativa al registro RBP, que apunta a la base actual de la pila

e) Algunas funciones de la biblioteca de libc hacen uso de operaciones de resgistros largos y estan piden que los datos esten alineados a 16 bytes
Antes de realizar una llamada a una funci´on, la pila debe
quedar alineada a 16 bytes si es una funci´on que hace uso de
libc, sino debe estar alineada a 8 bytes.
